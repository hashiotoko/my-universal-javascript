extend type Query {
  team(id: ID!): Team
  allTeams: [Team]!
  teams(
    first: Int
    after: String
    last: Int
    before: String
    filter: TeamFilter
    orderBy: TeamOrder
  ): TeamConnection!
}

type Team {
  id: ID!
  name: String!
  postalCode: String!
  mailAddress: String!
  firstLoggedInAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

input TeamFilter {
  name: String
}

input TeamOrder {
  field: TeamOrderField!
  direction: OrderDirection!
}

enum TeamOrderField {
  NAME
}

type TeamConnection {
  edges: [TeamEdge]
  nodes: [Team]
  pageInfo: PageInfo!
  totalCount: Int!
}

type TeamEdge {
  node: Team
  cursor: String!
}
